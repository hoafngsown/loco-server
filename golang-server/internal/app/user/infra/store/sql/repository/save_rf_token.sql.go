// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: save_rf_token.sql

package repository

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const saveRefreshToken = `-- name: SaveRefreshToken :one
INSERT INTO refresh_token (id, user_id, token, expired_at)
VALUES (
    gen_random_uuid(),
    $1,
    $2,
    $3
)
RETURNING id, user_id, token, expired_at
`

type SaveRefreshTokenParams struct {
	UserID    uuid.UUID
	Token     string
	ExpiredAt time.Time
}

func (q *Queries) SaveRefreshToken(ctx context.Context, arg SaveRefreshTokenParams) (RefreshToken, error) {
	row := q.db.QueryRowContext(ctx, saveRefreshToken, arg.UserID, arg.Token, arg.ExpiredAt)
	var i RefreshToken
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Token,
		&i.ExpiredAt,
	)
	return i, err
}
